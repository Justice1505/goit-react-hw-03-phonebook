{"version":3,"sources":["Components/Filter/Filter.module.css","Components/ContactForm/ContactForm.module.css","Components/ContactForm/ContactForm.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","App.js","index.js","Components/ContactList/ContactList.module.css"],"names":["module","exports","ContactForm","state","name","number","nameRandomId","shortid","generate","numberRandomId","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","className","s","form","label","htmlFor","onChange","input","type","pattern","title","required","id","btn","Component","ContactList","contacts","onDelete","map","item","span","onClick","Filter","onFilter","App","filter","addContact","data","contact","find","con","toLowerCase","alert","prevState","sort","a","b","localeCompare","target","onContactsFilter","includes","contactId","users","localStorage","getItem","parseUsers","JSON","parse","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,MAAQ,wB,uCCA1BD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,IAAM,2B,4LCIvEC,E,4MACnBC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAGVC,aAAeC,IAAQC,W,EACvBC,eAAiBF,IAAQC,W,EAEzBE,aAAe,SAACC,GAAO,IAAD,EACIA,EAAEC,cAAlBR,EADY,EACZA,KAAMS,EADM,EACNA,MACd,EAAKC,SAAL,eAAiBV,EAAOS,K,EAG1BE,aAAe,SAACJ,GACdA,EAAEK,iBAEF,EAAKC,MAAMC,SAAS,EAAKf,OACzB,EAAKgB,S,EAGPA,MAAQ,WACN,EAAKL,SAAS,CAAEV,KAAM,GAAIC,OAAQ,M,4CAGpC,WACE,OACE,8BACE,uBAAMa,SAAUE,KAAKL,aAAcM,UAAWC,IAAEC,KAAhD,UACE,wBAAOF,UAAWC,IAAEE,MAAOC,QAASL,KAAKd,aAAzC,kBAEE,uBACEoB,SAAUN,KAAKV,aACfG,MAAOO,KAAKjB,MAAMC,KAClBiB,UAAWC,IAAEK,MACbC,KAAK,OACLxB,KAAK,OACLyB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,OAIZ,wBAAON,QAASL,KAAKX,eAAgBY,UAAWC,IAAEE,MAAlD,oBAEE,uBACEH,UAAU,MACVR,MAAOO,KAAKjB,MAAME,OAClB2B,GAAIZ,KAAKX,eACTiB,SAAUN,KAAKV,aACfN,KAAK,SACLwB,KAAK,MACLC,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,OAGZ,wBAAQH,KAAK,SAASP,UAAWC,IAAEW,IAAnC,kC,GAzD+BC,a,gBCD1B,SAASC,EAAT,GAA8C,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,SAC9C,OACE,6BACGD,EAASE,KAAI,gBAAGN,EAAH,EAAGA,GAAI5B,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,qBAAIgB,UAAWC,IAAEiB,KAAjB,UACE,uBAAMlB,UAAWC,IAAEkB,KAAnB,UAA0BpC,EAA1B,QACA,sBAAMiB,UAAWC,IAAEkB,KAAnB,SAA0BnC,IAC1B,wBAAQoC,QAAS,kBAAMJ,EAASL,IAAKX,UAAWC,IAAEW,IAAlD,sBAH0BD,Q,qBCLrB,SAASU,EAAT,GAAsC,IAApB7B,EAAmB,EAAnBA,MAAO8B,EAAY,EAAZA,SACtC,OACE,wBAAOtB,UAAWC,IAAEE,MAApB,kCAEE,uBAAOI,KAAK,OAAOf,MAAOA,EAAOa,SAAUiB,O,UCC5BC,E,4MACnBzC,MAAQ,CACNiC,SAAU,GACVS,OAAQ,I,EAgBVC,WAAa,SAACC,GACZ,IAAMC,EAAU,CACdhB,GAAIzB,IAAQC,WACZJ,KAAM2C,EAAK3C,KACXC,OAAQ0C,EAAK1C,QAIb,EAAKF,MAAMiC,SAASa,MAClB,SAACC,GAAD,OAASA,EAAI9C,KAAK+C,gBAAkBH,EAAQ5C,KAAK+C,iBAGnDC,MAAM,GAAD,OAAIJ,EAAQ5C,KAAZ,4BAGL,EAAKU,UAAS,SAACuC,GAAD,MAAgB,CAC5BjB,SAAU,sBAAIiB,EAAUjB,UAAd,CAAwBY,IAASM,MAAK,SAACC,EAAGC,GAAJ,OAC9CD,EAAEnD,KAAKqD,cAAcD,EAAEpD,c,EAK/BuC,SAAW,SAAChC,GACV,EAAKG,SAAS,CAAE+B,OAAQlC,EAAE+C,OAAO7C,S,EAGnC8C,iBAAmB,WAAO,IAAD,EACM,EAAKxD,MAA1BiC,EADe,EACfA,SAAUS,EADK,EACLA,OAClB,OAAOT,EAASS,QAAO,SAACG,GAAD,OACrBA,EAAQ5C,KAAK+C,cAAcS,SAASf,EAAOM,mB,EAI/Cd,SAAW,SAACwB,GACV,EAAK/C,UAAS,SAACuC,GAAD,MAAgB,CAC5BjB,SAAUiB,EAAUjB,SAASS,QAC3B,SAACG,GAAD,OAAaA,EAAQhB,KAAO6B,U,uDAjDlC,WACE,IAAMC,EAAQC,aAAaC,QAAQ,YACnC,GAAIF,EAAO,CACT,IAAMG,EAAaC,KAAKC,MAAML,GAC9B1C,KAAKN,SAAS,CAAEsB,SAAU6B,O,gCAG9B,SAAmBZ,GACbjC,KAAKjB,MAAMiC,WAAaiB,EAAUjB,UACpC2B,aAAaK,QAAQ,WAAYF,KAAKG,UAAUjD,KAAKjB,MAAMiC,a,oBA6C/D,WAAU,IACAS,EAAWzB,KAAKjB,MAAhB0C,OACR,OACE,sBAAKxB,UAAU,QAAf,UACE,2CACA,cAAC,EAAD,CAAaH,SAAUE,KAAK0B,aAC5B,0CACA,cAACJ,EAAD,CAAQ7B,MAAOgC,EAAQF,SAAUvB,KAAKuB,WACtC,cAACR,EAAD,CACEC,SAAUhB,KAAKuC,mBACftB,SAAUjB,KAAKiB,kB,GAtEQH,aCHjCoC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1B1E,EAAOC,QAAU,CAAC,IAAM,yBAAyB,KAAO,0BAA0B,KAAO,6B","file":"static/js/main.a8a1d6f1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2BYT1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__MCjKg\",\"label\":\"ContactForm_label__2BkUK\",\"btn\":\"ContactForm_btn__29YL8\"};","import React, { Component } from \"react\";\nimport shortid from \"shortid\";\nimport s from \"./ContactForm.module.css\";\nimport PropTypes from \"prop-types\";\n\nexport default class ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  nameRandomId = shortid.generate();\n  numberRandomId = shortid.generate();\n\n  handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit} className={s.form}>\n          <label className={s.label} htmlFor={this.nameRandomId}>\n            Name:\n            <input\n              onChange={this.handleChange}\n              value={this.state.name}\n              className={s.input}\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n            />\n          </label>\n\n          <label htmlFor={this.numberRandomId} className={s.label}>\n            Number:\n            <input\n              className=\"{ }\"\n              value={this.state.number}\n              id={this.numberRandomId}\n              onChange={this.handleChange}\n              name=\"number\"\n              type=\"tel\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n            />\n          </label>\n          <button type=\"submit\" className={s.btn}>\n            Add Contact\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import PropTypes from \"prop-types\";\n\nimport s from \"./ContactList.module.css\";\n\nexport default function ContactList({ contacts, onDelete }) {\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) => (\n        <li className={s.item} key={id}>\n          <span className={s.span}>{name}: </span>\n          <span className={s.span}>{number}</span>\n          <button onClick={() => onDelete(id)} className={s.btn}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.number.isRequired,\n  }),\n  onDelete: PropTypes.func.isRequired,\n};\n","import PropTypes from \"prop-types\";\nimport s from \"./Filter.module.css\";\n\nexport default function Filter({ value, onFilter }) {\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input type=\"text\" value={value} onChange={onFilter}></input>\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  onFilter: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n};\n","import React, { Component } from \"react\";\nimport shortid from \"shortid\";\nimport ContactForm from \"./Components/ContactForm/ContactForm\";\nimport ContactList from \"./Components/ContactList/ContactList\";\nimport Filter from \"./Components/Filter/Filter\";\n\nimport \"./App.css\";\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const users = localStorage.getItem(\"contacts\");\n    if (users) {\n      const parseUsers = JSON.parse(users);\n      this.setState({ contacts: parseUsers });\n    }\n  }\n  componentDidUpdate(prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  addContact = (data) => {\n    const contact = {\n      id: shortid.generate(),\n      name: data.name,\n      number: data.number,\n    };\n\n    if (\n      this.state.contacts.find(\n        (con) => con.name.toLowerCase() === contact.name.toLowerCase()\n      )\n    ) {\n      alert(`${contact.name} is alresdy in contacts`);\n      return;\n    } else\n      this.setState((prevState) => ({\n        contacts: [...prevState.contacts, contact].sort((a, b) =>\n          a.name.localeCompare(b.name)\n        ),\n      }));\n  };\n\n  onFilter = (e) => {\n    this.setState({ filter: e.target.value });\n  };\n\n  onContactsFilter = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  onDelete = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  render() {\n    const { filter } = this.state;\n    return (\n      <div className=\"block\">\n        <h2>Phonebook</h2>\n        <ContactForm onSubmit={this.addContact} />\n        <h2>Contacts</h2>\n        <Filter value={filter} onFilter={this.onFilter} />\n        <ContactList\n          contacts={this.onContactsFilter()}\n          onDelete={this.onDelete}\n        />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"ContactList_btn__1kKaI\",\"item\":\"ContactList_item__3KKf1\",\"span\":\"ContactList_span__2Qcni\"};"],"sourceRoot":""}